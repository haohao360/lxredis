<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.redis.dao.user.UserMapper" >
  <resultMap id="BaseResultMap" type="net.redis.dto.user.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="rank" property="rank" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="lastLoginTime" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="modifyTime" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="province" property="province" jdbcType="INTEGER" />
    <result column="city" property="city" jdbcType="INTEGER" />
    <result column="district" property="district" jdbcType="INTEGER" />
    <result column="community" property="community" jdbcType="INTEGER" />
    <result column="pavilionId" property="pavilionId" jdbcType="INTEGER" />
    <result column="pavilionCode" property="pavilionCode" jdbcType="VARCHAR" />
    <result column="lastLoginip" property="lastLoginip" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="points" property="points" jdbcType="DECIMAL" />
    <result column="totalConsume" property="totalConsume" jdbcType="DECIMAL" />
    <result column="unionToken" property="unionToken" jdbcType="VARCHAR" />
    <result column="memberType" property="memberType" jdbcType="INTEGER" />
    <result column="unionType" property="unionType" jdbcType="INTEGER" />
    <result column="channelId" property="channelId" jdbcType="INTEGER" />
    <result column="payPassword" property="payPassword" jdbcType="VARCHAR" />
    <result column="accountType" property="accountType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userName, password, mobile, sex, photo, rank, email, alias, createTime, lastLoginTime, 
    modifyTime, province, city, district, community, pavilionId, pavilionCode, lastLoginip, 
    amount, points, totalConsume, unionToken, memberType, unionType, channelId, payPassword, 
    accountType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.redis.dto.user.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.redis.dto.user.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.redis.dto.user.User" >
    insert into user (id, userName, password, 
      mobile, sex, photo, 
      rank, email, alias, 
      createTime, lastLoginTime, modifyTime, 
      province, city, district, 
      community, pavilionId, pavilionCode, 
      lastLoginip, amount, points, 
      totalConsume, unionToken, memberType, 
      unionType, channelId, payPassword, 
      accountType)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{photo,jdbcType=VARCHAR}, 
      #{rank,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{province,jdbcType=INTEGER}, #{city,jdbcType=INTEGER}, #{district,jdbcType=INTEGER}, 
      #{community,jdbcType=INTEGER}, #{pavilionId,jdbcType=INTEGER}, #{pavilionCode,jdbcType=VARCHAR}, 
      #{lastLoginip,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{points,jdbcType=DECIMAL}, 
      #{totalConsume,jdbcType=DECIMAL}, #{unionToken,jdbcType=VARCHAR}, #{memberType,jdbcType=INTEGER}, 
      #{unionType,jdbcType=INTEGER}, #{channelId,jdbcType=INTEGER}, #{payPassword,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="net.redis.dto.user.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        userName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="rank != null" >
        rank,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="alias != null" >
        alias,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="lastLoginTime != null" >
        lastLoginTime,
      </if>
      <if test="modifyTime != null" >
        modifyTime,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="community != null" >
        community,
      </if>
      <if test="pavilionId != null" >
        pavilionId,
      </if>
      <if test="pavilionCode != null" >
        pavilionCode,
      </if>
      <if test="lastLoginip != null" >
        lastLoginip,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="points != null" >
        points,
      </if>
      <if test="totalConsume != null" >
        totalConsume,
      </if>
      <if test="unionToken != null" >
        unionToken,
      </if>
      <if test="memberType != null" >
        memberType,
      </if>
      <if test="unionType != null" >
        unionType,
      </if>
      <if test="channelId != null" >
        channelId,
      </if>
      <if test="payPassword != null" >
        payPassword,
      </if>
      <if test="accountType != null" >
        accountType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="province != null" >
        #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        #{city,jdbcType=INTEGER},
      </if>
      <if test="district != null" >
        #{district,jdbcType=INTEGER},
      </if>
      <if test="community != null" >
        #{community,jdbcType=INTEGER},
      </if>
      <if test="pavilionId != null" >
        #{pavilionId,jdbcType=INTEGER},
      </if>
      <if test="pavilionCode != null" >
        #{pavilionCode,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginip != null" >
        #{lastLoginip,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="points != null" >
        #{points,jdbcType=DECIMAL},
      </if>
      <if test="totalConsume != null" >
        #{totalConsume,jdbcType=DECIMAL},
      </if>
      <if test="unionToken != null" >
        #{unionToken,jdbcType=VARCHAR},
      </if>
      <if test="memberType != null" >
        #{memberType,jdbcType=INTEGER},
      </if>
      <if test="unionType != null" >
        #{unionType,jdbcType=INTEGER},
      </if>
      <if test="channelId != null" >
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="payPassword != null" >
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.redis.dto.user.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null" >
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.photo != null" >
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null" >
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null" >
        alias = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginTime != null" >
        lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modifyTime = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=INTEGER},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=INTEGER},
      </if>
      <if test="record.district != null" >
        district = #{record.district,jdbcType=INTEGER},
      </if>
      <if test="record.community != null" >
        community = #{record.community,jdbcType=INTEGER},
      </if>
      <if test="record.pavilionId != null" >
        pavilionId = #{record.pavilionId,jdbcType=INTEGER},
      </if>
      <if test="record.pavilionCode != null" >
        pavilionCode = #{record.pavilionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginip != null" >
        lastLoginip = #{record.lastLoginip,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.points != null" >
        points = #{record.points,jdbcType=DECIMAL},
      </if>
      <if test="record.totalConsume != null" >
        totalConsume = #{record.totalConsume,jdbcType=DECIMAL},
      </if>
      <if test="record.unionToken != null" >
        unionToken = #{record.unionToken,jdbcType=VARCHAR},
      </if>
      <if test="record.memberType != null" >
        memberType = #{record.memberType,jdbcType=INTEGER},
      </if>
      <if test="record.unionType != null" >
        unionType = #{record.unionType,jdbcType=INTEGER},
      </if>
      <if test="record.channelId != null" >
        channelId = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.payPassword != null" >
        payPassword = #{record.payPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null" >
        accountType = #{record.accountType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=BIGINT},
      userName = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      photo = #{record.photo,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      alias = #{record.alias,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      modifyTime = #{record.modifyTime,jdbcType=TIMESTAMP},
      province = #{record.province,jdbcType=INTEGER},
      city = #{record.city,jdbcType=INTEGER},
      district = #{record.district,jdbcType=INTEGER},
      community = #{record.community,jdbcType=INTEGER},
      pavilionId = #{record.pavilionId,jdbcType=INTEGER},
      pavilionCode = #{record.pavilionCode,jdbcType=VARCHAR},
      lastLoginip = #{record.lastLoginip,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      points = #{record.points,jdbcType=DECIMAL},
      totalConsume = #{record.totalConsume,jdbcType=DECIMAL},
      unionToken = #{record.unionToken,jdbcType=VARCHAR},
      memberType = #{record.memberType,jdbcType=INTEGER},
      unionType = #{record.unionType,jdbcType=INTEGER},
      channelId = #{record.channelId,jdbcType=INTEGER},
      payPassword = #{record.payPassword,jdbcType=VARCHAR},
      accountType = #{record.accountType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.redis.dto.user.User" >
    update user
    <set >
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modifyTime = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=INTEGER},
      </if>
      <if test="district != null" >
        district = #{district,jdbcType=INTEGER},
      </if>
      <if test="community != null" >
        community = #{community,jdbcType=INTEGER},
      </if>
      <if test="pavilionId != null" >
        pavilionId = #{pavilionId,jdbcType=INTEGER},
      </if>
      <if test="pavilionCode != null" >
        pavilionCode = #{pavilionCode,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginip != null" >
        lastLoginip = #{lastLoginip,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="points != null" >
        points = #{points,jdbcType=DECIMAL},
      </if>
      <if test="totalConsume != null" >
        totalConsume = #{totalConsume,jdbcType=DECIMAL},
      </if>
      <if test="unionToken != null" >
        unionToken = #{unionToken,jdbcType=VARCHAR},
      </if>
      <if test="memberType != null" >
        memberType = #{memberType,jdbcType=INTEGER},
      </if>
      <if test="unionType != null" >
        unionType = #{unionType,jdbcType=INTEGER},
      </if>
      <if test="channelId != null" >
        channelId = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="payPassword != null" >
        payPassword = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        accountType = #{accountType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.redis.dto.user.User" >
    update user
    set userName = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      photo = #{photo,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      modifyTime = #{modifyTime,jdbcType=TIMESTAMP},
      province = #{province,jdbcType=INTEGER},
      city = #{city,jdbcType=INTEGER},
      district = #{district,jdbcType=INTEGER},
      community = #{community,jdbcType=INTEGER},
      pavilionId = #{pavilionId,jdbcType=INTEGER},
      pavilionCode = #{pavilionCode,jdbcType=VARCHAR},
      lastLoginip = #{lastLoginip,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      points = #{points,jdbcType=DECIMAL},
      totalConsume = #{totalConsume,jdbcType=DECIMAL},
      unionToken = #{unionToken,jdbcType=VARCHAR},
      memberType = #{memberType,jdbcType=INTEGER},
      unionType = #{unionType,jdbcType=INTEGER},
      channelId = #{channelId,jdbcType=INTEGER},
      payPassword = #{payPassword,jdbcType=VARCHAR},
      accountType = #{accountType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>